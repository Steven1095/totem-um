---
import Wysiwyg from './Wysiwyg.astro';

// const submitForm = (event) => {
//   event.preventDefault();
//   const formData = new FormData(event.target);

//   const item = {
//     id: Date.now(),
//     title: formData.get('title'),
//     description: formData.get('description'),
//     date: formData.get('date'),
//     time: formData.get('time'),
//     image: formData.get('image'),
//   };

//   items.push(item); // agregar el item al array de items
//   event.target.reset(); // resetear el formulario después de enviar
// };
---
<form x-data="formularioHandler()" @submit="submitForm" class="grid grid-cols-1 md:grid-cols-2 gap-6 p-6">
  <div>
    <label for="name_event" class="block text-md font-medium text-slider-nav">Nombre del evento</label>
    <input type="text" id="name_event" name="name_event" class="mt-3 block w-full h-10 bg-transparent rounded-md border-2 border-gray-400" required />
  </div>  
  <div> 
    <label for="moderator" class="block text-md font-medium text-slider-nav">Moderador</label>
    <input type="text" id="moderator" name="moderator" class="mt-3 block w-full h-10 bg-transparent rounded-md border-2 border-gray-400" required />
  </div> 
  <div>
    <label for="location" class="block text-md font-medium text-slider-nav">Lugar</label>
    <input type="text" id="location" name="location" class="mt-3 block w-full h-10 bg-transparent rounded-md border-2 border-gray-400" required />
  </div> 
  <div>
    <label for="mode" class="block text-md font-medium text-slider-nav">Modalidad</label>
    <input type="text" id="mode" name="mode" class="mt-3 block w-full h-10 bg-transparent rounded-md border-2 border-gray-400" required />
  </div>
  <div>
    <label for="date" class="block text-md font-medium text-slider-nav">Fecha</label>
    <input type="date" id="date" name="date" class="mt-3 pl-3 pr-1 block w-full h-10 bg-transparent rounded-md border-2 border-gray-400" required />
  </div>
  <div>
    <label for="time" class="block text-md font-medium text-slider-nav">Hora</label>
    <input type="time" id="time" name="time" class="mt-3 pl-3 pr-1 block w-full h-10 bg-transparent rounded-md border-2 border-gray-400" required />
  </div> 
  <div class="md:col-span-2">
    <Wysiwyg />
  </div>   
  <div>
    <label for="image" class="block text-md font-medium text-slider-nav">Imagen del evento</label>
    <input type="file" id="image" name="image" @change="handleImageUpload"accept="image/*" class="mt-3 block w-full text-sm text-color-iconos-500 file:mr-4 file:py-2 file:px-4 file:rounded-md file:border-0 file:text-sm file:font-semibold file:bg-gray-150 file:text-color-iconos hover:file:bg-gray-300" required />
  </div>  
  <div class="md:col-span-2 mt-3">
    <button type="submit" class="rounded-full bg-botones text-slider-nav font-semibold py-2 px-14 hover:bg-botones-hover">
      Guardar
    </button>
  </div>
</form>

<!-- <script>
  function formularioHandler() {
    return {
      title: '',
      date: '',
      time: '',
      description: '', // Aquí guarda el contenido del WYSIWYG
      image: null,

      submitForm(event) {
        event.preventDefault(); // Evita que el formulario se envíe por defecto

        // Captura los datos del formulario
        const formData = {
          title: this.title,
          date: this.date,
          time: this.time,
          description: this.description,
          image: this.image, // Nota: las imágenes se manejarán como archivos binarios
        };

        // Convertimos los datos a JSON
        const jsonData = JSON.stringify(formData, null, 2);

        // Imprimimos el JSON en la consola
        console.log("Datos a enviar a la API:");
        console.log(jsonData);

        // Aquí podrías enviar `jsonData` a tu API con fetch()
      },

      // Función para manejar la imagen seleccionada
      handleImageUpload(event) {
        const file = event.target.files[0];
        if (file) {
          this.image = file;
        }
      },
    };
  }
</script> -->
